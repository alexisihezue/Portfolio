#Question 1
arr_nums = [1,2,3,4,5,6,7,8] #variable with array numbers 
def shuffleArray (arr): #method to order numbers 
  
  n = len(arr) #variable with length of array 
  new = int((n/2)) #variable with the length divided by 2 
  
  x_values = arr[0:new] #takes the first half of the array as the x coords 
  y_values = arr[new:: ] #takes the first half of the array as the y coords

  x = [] #empty list for x-coords 
  y = [] #empty list for y-coords 
  coord = [] #empty list for ordered coords 
  
  for a in x_values: #iterates through all the x-coords 
    x.append(a) #stores the coords in empty list 
  print("x-coordinates = ") #sentence to introduce x-coords array 
  print(x) #prints x-coords array 
  print("\n") #space 

  for a in y_values: #iterates through all the y-coords 
    y.append(a) #stores the coords in empty list 
  print("y-coordinates = ") #sentence to itroduce the y-coords 
  print(y) #prints the y-coords array 
  print("\n") #space 

  b = len(x) #length of x-coords array 
  i = 0 #counter begins at 0 

  while i < b: #while the counter is < length of x array 
    val_1 = x[i] #creates x-coord for each i 
    val_2 = y[i] #creates y-coord for each i 
    i+=1 #increases counter by 1 
    coord.append(val_1) #adds the x-coord to array to make pair 
    coord.append(val_2) #adds the y-coord to array to make pair 
  print(coord) #prints the ordered array 
print(arr_nums) #prints the original array 
print("\n") #space 
shuffleArray(arr_nums) #calls method


#Question 2
def pattern(): #function to make pattern 
  s = 9
  for r in range(s): #defines number of rows 
    for c in range(s): #defines number of columns 
      if((c == 0 or c == s-1) or (r == c and r < 9/2) or (r + c == (s - 1) and r < 9/2)): #conditions for star to be placed  
        print("*", end=" ") #prints the star with a space after 
      else: #in case where star does not to be placed 
        print(" ", end=" ") #prints space 
    print() #prints space 
pattern() #calls method 


#Question 3
def order():
  user = input("Please type in numbers separated by commas: ") #takes list from user 
  num_list = user.split(",") #declares variable with seperated numbers
  num_list = [int(x) for x in num_list] #turns the inputted list into integers

  dic = {} #empy dictionary to store sorted positions  
  lis_new = [] #empty list to to print results  

  sorted_num = sorted(num_list) #sorts the inputted list numerically 

  
  a = len(sorted_num) #variable that stores the length of the sorted list 

  for i in range(a): #iterates through all the values in the sorted list 
    if sorted_num[i] not in dic: #in the case that the indexed value is not in the dictionary already 
      dic[sorted_num[i]] = i #places the indexed value in the dictionary 
  
  for i in num_list: #iterates through all the values in the inputted list 
    lis_new.append(dic[i]) #appends the position for each value in the dictionary 
  return lis_new #returns the finished list 
  print(lis_new) #prints the finished list 

order()
