# -*- coding: utf-8 -*-
"""Assignment #1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LPJu10-PKR1_Yt82uwewvMr6qGWtXDaU

Activity 1
"""

def count_text(): #method to count the number of characters and words 
  count_char = 0 #variable that declares the initial no of characters as 0 
  count_words = 0 #variable that declares the initial no of words as 0
  sentence = input("Please input your sentence: ") #variable that stores an inputted sentence 
  for x in range(0, len(sentence)): #loop to iterate through the entire sentence 
    if sentence[x] != "": #conditional that identifies every character in the sentence 
      count_char = count_char + 1 #increases the character count by 1
 
 
  def clean(sentence): #inner methd to count the number of words in the sentence 
    
    clean_sentence = sentence.strip() #removes any white spaces before or after the sentence 
    clean_sentence = clean_sentence.replace("  ", "") #removes any adittional white spaces in the sentence 
    clean_sentence = clean_sentence.replace(".","") #removes any periods in the sentence 
    clean_sentence = clean_sentence.lower() #converts the sentence to lower case 
    clean_sentence = clean_sentence.replace(",","").replace("?","").replace("!","").replace("\"", "") #removes all other forms of punctuation 
    return clean_sentence #returns the cleaned sentence 
  clean(sentence); #calls the inner method 

  for x in clean(sentence).split(" "): #loop that iterates through the sentence after seperating it by the spaces in between each word 
    if x.isalpha(): #conditional that runs if each item in the sentence is composed of letters 
      count_words +=1 #increases the word count by1 
    else: #in the case that the item is not composed of words 
      count_words +=0 #word count remains the same 
  
  
  print("Number of words: " + str(count_words)) #prints sentence with the number of words  
  print("Number of characters: " + str(count_char)) #prints sentence with the number of characters 
  

count_text(); #calls the outer method

"""Activity 2"""

def get_unique(): #function to sort the words alphanumerically
  sentence = input("Please input your list separated by white spaces: ") #requests string 
  sentence = sentence.split(" ") #separates each value in string by white spaces to create list 
  words = [] #empty list to store the words 
  numbers = [] #empty list to store the numbers 
  
  for x in range(0, len(sentence)): #iterates through every item in the list 
    if str(sentence[x]).isalpha(): #condition for item that begins with a letter 
      words.append(sentence[x]) #if item begins with letter, it is moved to 'words' list
      words.sort() #words list is sorted alphabetically
       
    else: #condition for items that don't begin with letters 
      numbers.append(sentence[x]) #moves item to the numbers list 
      numbers.sort() #numbers list is sorted numerically
  
  for x in numbers: #iterates through items in the numbers list 
    words.append(x) #adds the items in the numbers list to the end of the words list 
  print("The unique list is - ") #prints sentence introducing the final list 
  print(words) #prints final list from the previously seperate ones 
    
get_unique() #calls the method

"""Activity 3"""

def pattern(): #method to print the pattern 
  r = 5 #variable that establishes the max number of stars in a row 
  for x in range(0, r): #iterates through any number,x,  between 0 and the max number of stars, 5
    for a in range(0, x + 1): #iterates through any number between 0 and the previous number, x, increasing by 1 
      print("*", end='') #prints a star with a space after it 
    print("\n") #starts a new line after the stars are printed 
  for x in range (r, 0, -1): #iterates through any number, x, between the max number of stars and 0, in increments of -1
    for a in range(0, x - 1): #iterates through any number between 0 and the previous number, x, decreasing by 1 
      print("*", end='') #prints a star with a space after it
    print("\n") #starts a new line after the stars are printed
pattern() #calls the function

"""Activity 4"""

def count(): #method to count the number of even and odd numbers 
  count_even = 0 #variable that stores the number of even numbers, starting at 0 
  count_odd = 0 #variable that stores the number of odd numbers, starting at 0
  user = input("Please input a list of numbers separated by commas: ") #asks user to input their list of numbers 
  num_list = user.split(",") #separates the numbers by commas 
  num_list = [int(x) for x in num_list] #converts each number into an integer 

  for x in num_list: #for any value in the list 
    if x % 2 == 0: #if the remainder of that value divided by 2 = 0 
      count_even +=1 #value for number of even numbers increases by 1 
    elif x % 2 == 1: #if the remainder of that value divided by 2 = 1 
      count_odd +=1 #value for number of odd numbers increases by 1
  print("Number of even numbers: " + str(count_even)) #prints sentence with the number of even number
  print("Number of odd numbers: " + str(count_odd))

count() #calls the function

"""Activity 5"""

def multiples(): #method to print the numbers and special text 
   
   i = 0  #increment that starts at 0 
   
   mult_3 = [3,6,9,12,18,21,24,27,33,36,39,42,48] #list that stores all the multiples of 3 up to 50 
   mult_5 = [5,10,20,25,35,40,50] #list that stores all the multiples of 5 up to 50 
   mult_both = [15,30,45] #list that stores the common multiples of 3 and 5 
   
   while i < 50: #while loop that runs as long as i < 50 
     i += 1 #increases i by 1 as long as it's less than 50 
     
     if i in mult_3: #if the value of i is in the list with the multiples of 3 
      print("Avada") #prints this word if condition met 
     elif i in mult_5: #if the value of i is in the list with the multiples of 5
       print("Kedavra") #prints this word if condition met 
     elif i in mult_both: #if the value of i is in the list with common multiples of 3 and 5
       print("Avada Kedavra") #prints this phrase if condition met 
     else: #if the value of i is not a multiple of 3 or 5
       print(i) #prints the value of i if condition met 
    
multiples() #calls the method

"""Activity 6"""

num = input("Please enter a list of numbers: ") #variable that stores list of numbers from user 
val = input("Please enter a value to remove: ") #variable that stores value to be removed 
new = [] #empty list to store updated list 
def change(lis, val): #method tp update list after removing the value  
  num_list = num.split(",") #seperates the list of numbers by the commas  
  for x in num_list: #iterates through all the values in the list of numbers 
    if x != val: #if any of the values in the list are not equal to the value being removed 
      new.extend(x) #value will be added to empty list 
  return new #returns the previously empty list 
  
print("Your updated list is: ") #prints the sentence introducing the updated lists
print(change(num, val)) #prints the function returning the updated list