# -*- coding: utf-8 -*-
"""Assignment #2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ah--23tNv07K86gUsAqADSATRrUhQxjQ

Assignment #1
"""

word = "codeleet"                                 #variable that stores the original word 
numbers = [4,5,6,7,0,2,1,3]                       #variable that stores the new indices

def arrange(char, ind):                           #creates the function
  first = [0] * len(char)                         #creates a list with zeroes that's as long as the requested word, zero is just a placeholder
  for i, v in enumerate(char):                    #loop that iterates through all the characters in the word and their respective indices 
    first[ind[i]] = v                             #transfers each letter to its new index and replaces the 0
  return "".join(first)                           #joins each letter in the string and returns the finalized string 

print(arrange(word, numbers))                     #prints the function

"""Assignment #2"""

input = int(input("Please input a number: "))                 #allows user to input a number 
print("\n")                                                   #space 
lis = []                                                      #empty list to store the number of matches 

def teams(num):                                               #function to calculate the number of matches 

  if num % 2 == 0:                                            #if the inputted number is even 
    next = int(num / 2)                                       #determines the number of matches 
    advance = int(num - next)                                 #determiens the number of teams to advance to the next round 
    if advance != 1:                                          #if the number of teams advancing isn't down to the last one 
      lis.append(next)                                        #add the number of matches left from this round to the empty list 
      teams(advance)                                          #re-start the loop with the number of teams advancing until it is 1 
    if advance == 1:                                          #if the number of teams advancing is down to the last one 
      lis.append(advance)                                     #ends the loop by adding the number of teams advancing, which is the same as the number of matches left to the list 
  else:                                                       #if the inputted number is odd 
    next = int((num - 1)/2)                                   #determines the number of matches
    advance = (num - next)                                    #determiens the number of teams to advance to the next round
    if advance != 1:                                          #if the number of teams advancing isn't down to the last one
      lis.append(next)                                        #add the number of matches left from this round to the empty list 
      teams(advance)                                          #re-start the loop with the number of teams advancing until it is 1
    if advance == 1:                                          #if the number of teams advancing is down to the last one
      lis.append(advance)                                     #ends the loop by adding the number of teams advancing, which is the same as the number of matches left to the list 
  return sum(lis)                                             #returns the sum of the list of number of matches 



print("The total number of matches that will take place is: " + str(teams(input))) #prints sentence with list 
print("\n")                                                   #space 
print("The eventual number of matches until the winner is announced will be as follows: ", lis) #prints sentence with list

"""Assignment #3"""

my_input = input("Please input a number: ")                                     #allows user to input a number 
print("\n")                                                                     #space


def divide(num):                                                                #function to see if the number is self-dividing 
  num_list = [int(x) for x in num]                                              #converts each digit in the number to an integer 
  a = int(num)                                                                  #converts the inputted number to an integer 

  for x in num_list:                                                            #loop to create sentences for each digit 
    n = len(num_list)

    first = "The remainder of " + str(num) + " divided by "
    second = str(x) + " is equal to 0."
    last = first + second

    third = str(x) + " is either indeterminate or not 0."
    final = first + third 



    if (x != 0) and (a % x == 0):                                               #if the digit is not 0 and produces a remainder of 0 when divided with the inputted number 
      print(last)                                                               #prints sentence about digit 
      if x == num_list[-1]:                                                     #if the digit is the last one in the number 
        print("\n")                                                             #space 
        print(str(num) + " is a self-dividing number.")                         #prints sentence identifying the inputted number as self-dividing 
    elif (x == 0) or (a%x != 0):                                                #if the digit is 0 or doesn't produce a remainder that is 0 
      print(final)                                                              #prints sentence about digit 
      if x == num_list[-1]:                                                     #if the digit is the last one in the number 
        print("\n")                                                             #space 
        print(str(num) + " is not a self-dividing number.")                     #prints sentence denying the number is self-dividing 
      
  print("\n")                                                                   #space

divide(my_input)                                                                #calls function

"""Assignment #4"""

import re                                                                       #imports the regex function 

sent = input("Please enter the text: ")                                         #allows user to input their own text 
print("\n")                                                                     #space 

def find(text):                                                                 #function to find all the words that satisfies

  print("The list of words with 3-5 characters: ")                              #sentence introducing the words with 3-5 characters 
  x = re.findall(r"\b\w{3,5}\b", text)                                          #variable that stores the special sequences and function necessay to find the words 
  print("\n")                                                                   #space
  print(x)                                                                      #prints the words               

find(sent)                                                                      #calls the function